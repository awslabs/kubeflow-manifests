apiVersion: v1
data:
  spawner_ui_config.yaml: "# Configuration file for the Jupyter UI.\n#\n# Each Jupyter\
    \ UI option is configured by two keys: 'value' and 'readOnly'\n# - The 'value'\
    \ key contains the default value\n# - The 'readOnly' key determines if the option\
    \ will be available to users\n#\n# If the 'readOnly' key is present and set to\
    \ 'true', the respective option\n# will be disabled for users and only set by\
    \ the admin. Also when a\n# Notebook is POSTED to the API if a necessary field\
    \ is not present then\n# the value from the config will be used.\n#\n# If the\
    \ 'readOnly' key is missing (defaults to 'false'), the respective option\n# will\
    \ be available for users to edit.\n#\n# Note that some values can be templated.\
    \ Such values are the names of the\n# Volumes as well as their StorageClass\n\
    spawnerFormDefaults:\n  image:\n    # The container Image for the user's Jupyter\
    \ Notebook\n    value: public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-scipy:v1.4\n\
    \    # The list of available standard container Images\n    options:\n    - public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-scipy:v1.4\n\
    \    - public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-pytorch-full:v1.4\n\
    \    - public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-pytorch-cuda-full:v1.4\n\
    \    - public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-tensorflow-full:v1.4\n\
    \    - public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/jupyter-tensorflow-cuda-full:v1.4\n\
    \  imageGroupOne:\n    # The container Image for the user's Group One Server\n\
    \    # The annotation `notebooks.kubeflow.org/http-rewrite-uri: /`\n    # is applied\
    \ to notebook in this group, configuring\n    # the Istio rewrite for containers\
    \ that host their web UI at `/`\n    value: public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/codeserver-python:v1.4\n\
    \    # The list of available standard container Images\n    options:\n    - public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/codeserver-python:v1.4\n\
    \  imageGroupTwo:\n    # The container Image for the user's Group Two Server\n\
    \    # The annotation `notebooks.kubeflow.org/http-rewrite-uri: /`\n    # is applied\
    \ to notebook in this group, configuring\n    # the Istio rewrite for containers\
    \ that host their web UI at `/`\n    # The annotation `notebooks.kubeflow.org/http-headers-request-set`\n\
    \    # is applied to notebook in this group, configuring Istio\n    # to add the\
    \ `X-RStudio-Root-Path` header to requests\n    value: public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/rstudio-tidyverse:v1.4\n\
    \    # The list of available standard container Images\n    options:\n    - public.ecr.aws/j1r0q0g6/notebooks/notebook-servers/rstudio-tidyverse:v1.4\n\
    \  # If true, hide registry and/or tag name in the image selection dropdown\n\
    \  hideRegistry: true\n  hideTag: false\n  allowCustomImage: true\n  # If true,\
    \ users can input custom images\n  # If false, users can only select from the\
    \ images in this config\n  imagePullPolicy:\n    # Supported values: Always, IfNotPresent,\
    \ Never\n    value: IfNotPresent\n    readOnly: false\n  cpu:\n    # CPU for user's\
    \ Notebook\n    value: '0.5'\n    # Factor by with to multiply request to calculate\
    \ limit\n    # if no limit is set, to disable set \"none\"\n    limitFactor: \"\
    1.2\"\n    readOnly: false\n  memory:\n    # Memory for user's Notebook\n    value:\
    \ 1.0Gi\n    # Factor by with to multiply request to calculate limit\n    # if\
    \ no limit is set, to disable set \"none\"\n    limitFactor: \"1.2\"\n    readOnly:\
    \ false\n  environment:\n    value: {}\n    readOnly: false\n  workspaceVolume:\n\
    \    # Workspace Volume to be attached to user's Notebook\n    # Each Workspace\
    \ Volume is declared with the following attributes:\n    # Type, Name, Size, MountPath\
    \ and Access Mode\n    value:\n      type:\n        # The Type of the Workspace\
    \ Volume\n        # Supported values: 'New', 'Existing'\n        value: New\n\
    \      name:\n        # The Name of the Workspace Volume\n        # Note that\
    \ this is a templated value. Special values:\n        # {notebook-name}: Replaced\
    \ with the name of the Notebook. The frontend\n        #                  will\
    \ replace this value as the user types the name\n        value: 'workspace-{notebook-name}'\n\
    \      size:\n        # The Size of the Workspace Volume (in Gi)\n        value:\
    \ '5Gi'\n      mountPath:\n        # The Path that the Workspace Volume will be\
    \ mounted\n        value: /home/jovyan\n      accessModes:\n        # The Access\
    \ Mode of the Workspace Volume\n        # Supported values: 'ReadWriteOnce', 'ReadWriteMany',\
    \ 'ReadOnlyMany'\n        value: ReadWriteOnce\n      class:\n        # The StrageClass\
    \ the PVC will use if type is New. Special values are:\n        # {none}: default\
    \ StorageClass\n        # {empty}: empty string \"\"\n        value: '{none}'\n\
    \    readOnly: false\n  dataVolumes:\n    # List of additional Data Volumes to\
    \ be attached to the user's Notebook\n    value: []\n    # Each Data Volume is\
    \ declared with the following attributes:\n    # Type, Name, Size, MountPath and\
    \ Access Mode\n    #\n    # For example, a list with 2 Data Volumes:\n    # value:\n\
    \    #   - value:\n    #       type:\n    #         value: New\n    #       name:\n\
    \    #         value: '{notebook-name}-vol-1'\n    #       size:\n    #      \
    \   value: '10Gi'\n    #       class:\n    #         value: standard\n    #  \
    \     mountPath:\n    #         value: /home/jovyan/vol-1\n    #       accessModes:\n\
    \    #         value: ReadWriteOnce\n    #       class:\n    #         value:\
    \ {none}\n    #   - value:\n    #       type:\n    #         value: New\n    #\
    \       name:\n    #         value: '{notebook-name}-vol-2'\n    #       size:\n\
    \    #         value: '10Gi'\n    #       mountPath:\n    #         value: /home/jovyan/vol-2\n\
    \    #       accessModes:\n    #         value: ReadWriteMany\n    #       class:\n\
    \    #         value: {none}\n    readOnly: false\n  gpus:\n    # Number of GPUs\
    \ to be assigned to the Notebook Container\n    value:\n      # values: \"none\"\
    , \"1\", \"2\", \"4\", \"8\"\n      num: \"none\"\n      # Determines what the\
    \ UI will show and send to the backend\n      vendors:\n      - limitsKey: \"\
    nvidia.com/gpu\"\n        uiName: \"NVIDIA\"\n      - limitsKey: \"amd.com/gpu\"\
    \n        uiName: \"AMD\"\n      # Values: \"\" or a `limits-key` from the vendors\
    \ list\n      vendor: \"\"\n    readOnly: false\n  affinityConfig:\n    # If readonly,\
    \ the default value will be the only option\n    # value is a list of `configKey`s\
    \ that we want to be selected by default\n    value: \"\"\n    # The list of available\
    \ affinity configs\n    options: []\n    #options:\n    #  - configKey: \"exclusive__n1-standard-2\"\
    \n    #    displayName: \"Exclusive: n1-standard-2\"\n    #    affinity:\n   \
    \ #      # (Require) Node having label: `node_pool=notebook-n1-standard-2`\n \
    \   #      nodeAffinity:\n    #        requiredDuringSchedulingIgnoredDuringExecution:\n\
    \    #          nodeSelectorTerms:\n    #            - matchExpressions:\n   \
    \ #                - key: \"node_pool\"\n    #                  operator: \"In\"\
    \n    #                  values:\n    #                   - \"notebook-n1-standard-2\"\
    \n    #      # (Require) Node WITHOUT existing Pod having label: `notebook-name`\n\
    \    #      podAntiAffinity:\n    #        requiredDuringSchedulingIgnoredDuringExecution:\n\
    \    #          - labelSelector:\n    #              matchExpressions:\n    #\
    \                - key: \"notebook-name\"\n    #                  operator: \"\
    Exists\"\n    #            namespaces: []\n    #            topologyKey: \"kubernetes.io/hostname\"\
    \n    #readOnly: false\n  tolerationGroup:\n    # The default `groupKey` from\
    \ the options list\n    # If readonly, the default value will be the only option\n\
    \    value: \"\"\n    # The list of available tolerationGroup configs\n    options:\
    \ []\n    #options:\n    #  - groupKey: \"group_1\"\n    #    displayName: \"\
    Group 1: description\"\n    #    tolerations:\n    #      - key: \"key1\"\n  \
    \  #        operator: \"Equal\"\n    #        value: \"value1\"\n    #       \
    \ effect: \"NoSchedule\"\n    #      - key: \"key2\"\n    #        operator: \"\
    Equal\"\n    #        value: \"value2\"\n    #        effect: \"NoSchedule\"\n\
    \    readOnly: false\n  shm:\n    value: true\n    readOnly: false\n  configurations:\n\
    \    # List of labels to be selected, these are the labels from PodDefaults\n\
    \    # value:\n    #   - add-gcp-secret\n    #   - default-editor\n    value:\
    \ []\n    readOnly: false\n"
kind: ConfigMap
metadata:
  labels:
    app: jupyter-web-app
    kustomize.component: jupyter-web-app
  name: jupyter-web-app-config-c6mgtkmgh4
  namespace: kubeflow
