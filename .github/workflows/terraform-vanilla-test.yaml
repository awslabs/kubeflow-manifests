name: Terraform Vanilla Test
on:
  # Run on PR configuration
  push:
    paths:
      - deployments/vanilla/terraform/**
      - iaac/terraform/apps/**
      - iaac/terraform/common/**
      - iaac/terraform/utils/**
    branches:
      - main

  # Run on schedule (every 6 hours)
  schedule:
    - cron: '0 0/6 * * *'

  workflow_dispatch:

# Ensure that only a single workflow which deploy tf build related stack will be run at a time. TODO: enable parallel runs
concurrency: tf-build

jobs:
  build:
    runs-on: ubuntu-latest
    # environment enables protection rules (e.g. need approval to run the workflow)
    environment: gh-actions-test
    permissions:
      # needed to interact with GitHub's OIDC Token endpoint
      id-token: write
      # needed to checkout repository
      contents: read
    env:
      TF_VAR_cluster_name: testvanilla-${{ github.run_id }}-${{ github.run_attempt }}
      TF_VAR_cluster_region: ${{ github.event_name == 'schedule' && 'us-west-2' || secrets.AWS_REGION }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.PR_BUILD_ROLE }}
        role-session-name: prrolesession-${{ github.run_id }}-${{ github.run_attempt }}
        aws-region: ${{ github.event_name == 'schedule' && 'us-west-2' || secrets.AWS_REGION }}

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
    
    - name: Plan and apply terraform
      run: |
        cd deployments/vanilla/terraform
        make deploy
    - name: Clean up terraform
      if: success() || failure()
      # retry delete if flakiness present
      run: |
        cd deployments/vanilla/terraform
        make delete || make delete || make delete