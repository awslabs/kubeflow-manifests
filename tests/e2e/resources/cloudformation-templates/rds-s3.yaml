AWSTemplateFormatVersion: "2010-09-09"
Description:
  "WARNING: This is not a recommended solution for using AWS RDS and is for testing only.

  Creates an S3 Bucket and a RDS instance. The RDS instance is accessible from outside the VPC
  so do not publicly expose the MYSQL username and password."
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.
  Subnets:
    Type: "List<AWS::EC2::Subnet::Id>"
    Description:
      The list of SubnetIds, for at least two Availability Zones in the
      region in your Virtual Private Cloud (VPC)
    ConstraintDescription: Select at least two SubnetIds that are Private
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: SecurityGroup Id of your EKS Worker Node
    ConstraintDescription: must be SecurityGroupId of an existing Instance
  DBName:
    Default: kubeflow
    Description: Database name for Kubeflow
    Type: String
    MinLength: "1"
    MaxLength: "64"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUsername:
    NoEcho: "true"
    Description: The database admin account username
    Type: String
    MinLength: "1"
    MaxLength: "16"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: "true"
    Description: The database admin account password
    Type: String
    MinLength: "8"
    MaxLength: "41"
    AllowedPattern: ".*"
    ConstraintDescription: must contain only alphanumeric characters.
  DBClass:
    Default: db.m5.large
    Description: Database instance class
    Type: String
    AllowedValues:
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
    ConstraintDescription: must select a valid database instance type.
  DBAllocatedStorage:
    Default: "20"
    Description: The size of the database (Gb)
    Type: Number
    MinValue: "20"
    MaxValue: "65536"
    ConstraintDescription: must be between 20 and 65536Gb.
  MultiAZ:
    Description: Multi-AZ master database
    Type: String
    Default: "false"
    AllowedValues: ["true", "false"]
    ConstraintDescription: must be true or false.
  S3SecretString:
    Description: Secret string for S3 secrets
    Type: String
Resources:
  MySQLSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow external access to MySQL on RDS
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
  MyS3Bucket:
    Type: "AWS::S3::Bucket"
  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets available for the RDS DB Instance
      SubnetIds:
        Ref: Subnets
  MyDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName:
        Ref: DBName
      AllocatedStorage:
        Ref: DBAllocatedStorage
      DBInstanceClass:
        Ref: DBClass
      Engine: MySQL
      EngineVersion: "8.0.17"
      MultiAZ:
        Ref: MultiAZ
      MasterUsername:
        Ref: DBUsername
      MasterUserPassword:
        Ref: DBPassword
      DBSubnetGroupName:
        Ref: MyDBSubnetGroup
      VPCSecurityGroups:
        - !Ref SecurityGroupId
        - !Ref MySQLSecurityGroup
      PubliclyAccessible: True
    DeletionPolicy: Snapshot
  MyRDSSecret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      SecretString: !Sub '{"username":"${DBUsername}","password":"${DBPassword}","database":"${DBName}","host":"${MyDB.Endpoint.Address}","port":"${MyDB.Endpoint.Port}"}'
  MyS3Secret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      SecretString: !Ref S3SecretString # This doesn't depend on any resource outputs so lets pass it in directly
Outputs:
  RDSEndpoint:
    Description: RDS Endpoint
    Value:
      Fn::GetAtt:
        - MyDB
        - Endpoint.Address
  S3BucketName:
    Description: S3 bucket name
    Value: !Ref MyS3Bucket
  RDSSecretName:
    Description: RDS secret name
    Value: !Ref MyRDSSecret
  S3SecretName:
    Description: S3 secret name
    Value: !Ref MyS3Secret
